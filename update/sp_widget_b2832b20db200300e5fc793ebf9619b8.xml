<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope,$document,$window,$timeout,$compile,$http,$rootScope) {
	/* widget controller */
	var c = this;

	/*Used but the End Point / Method*/
	//sample endpoint
	//$scope.httpEndpoint = '/api/x_12945_extrestapi/rest_test_api/get';
	$scope.httpEndpoint = 'https://dev18816.service-now.com/api/113970/ping/myv1';
	//Default Method
	$scope.httpMethod = 'GET';
	/*Used for the Header Block*/
	$scope.headerConfigList = []; //Holds Headers @ each index position. It would be an object
	$scope.httpFinalHeaders = {}; //I don't know what this is used for, cannot remember now
	$scope.headerUniqueID = 0;//Unique ID ; need to distinguish the ng-models for varisous headers
	//Logic to replicate a header object
	$scope.addHeader = function(){
		var hc = $scope.headerUniqueID;
		$scope.httpFinalHeaders[hc] = {};
		$scope.httpFinalHeaders[hc]['selected_header_'+hc] = '-Select-'
		$scope.headerConfigList.push({
			'item' : {
				'id' : hc,
				'select' : 'selected_header_'+hc,
				'custom' : 'custom_header_'+hc,
				'value' : 'value_header_'+hc
			}
		});
		$scope.headerUniqueID++;
		return 1;
	}
	//Logic to remove a header Object
	$scope.removeHeader = function(id){
		var hl = $scope.headerConfigList;
		for(var i=0; i< hl.length; i++){
			if(hl[i].item.id == id){
				hl.splice(i,1);
			}
		}
		return 1;
	}
	//Authentication Operations
	$scope.authHeader =[];
	$scope.httpAuthType = 'Username / Password';
	$scope.addAuthentication = function(){
		$scope.authHeader.push({});
		return 1;
	}
	$scope.removeAuthentication = function(){
		$scope.authHeader = [];
		$scope.httpAuthType = 'Username / Password';
		return 1;
	}
	$scope.encodeAuthentication = function(enc){
		if(enc){//True if it is to encode
			$scope.httpAuthType = 'Base64 Encoded';
			$scope.authHeader[0][0].httpBase64 = btoa($scope.authHeader[0][0].httpUsername +":"+ $scope.authHeader[0][0].httpPassword);
		}else{
			$scope.httpAuthType = 'Username / Password';
			var encodedString  = atob($scope.authHeader[0][0].httpBase64).split(":");
			$scope.authHeader[0][0].httpUsername = encodedString[0];
			$scope.authHeader[0][0].httpPassword = encodedString[1];
		}
		return $scope.authHeader[0][0].httpUsername+":"+$scope.authHeader[0][0].httpPassword;
	}

	/*Used by the send button*/
	$scope.httpDuration =0;
	$scope.start = function(){
		$scope.httpReqStart = new Date().getTime();
		$http({
			method: $scope.httpMethod,
			url: $scope.httpEndpoint,
			headers: $scope.gatherHeaders(),
			data: $scope.httpBody
		}).then(function successCallback(response) {
			$scope.httpDuration = (new Date().getTime() - $scope.httpReqStart)/1000;
			$rootScope.$broadcast('httpResponseObtained',response);
		}, function errorCallback(response) {
			$scope.httpDuration = (new Date().getTime() - $scope.httpReqStart)/1000;
			$rootScope.$broadcast('httpResponseObtained',response);
		});

	}

	$scope.gatherHeaders = function(){
		var finalHeaders = {};
		for(var i in $scope.httpFinalHeaders){
			var headerKey = $scope.httpFinalHeaders[i]['selected_header_'+i];
			if(headerKey == '> Custom'){
				headerKey = $scope.httpFinalHeaders[i]['custom_header_'+i];
			}
			var headerValue = $scope.httpFinalHeaders[i]['value_header_'+i];
			finalHeaders[headerKey] = headerValue;
		}
		//Add the Authentication Header
		if($scope.httpAuthType == 'Base64 Encoded'){
			finalHeaders.Authorization = 'Basic '+ $scope.authHeader[0][0].httpBase64;
		}else{
			finalHeaders.Authorization = 'Basic '+ btoa($scope.encodeAuthentication(true));
		}
		return finalHeaders;
	}
	$scope.beautify = function(){
		$scope.httpBody = JSON.stringify($scope.httpBody.data,null,"\t");
		return 1;
	}



}]]></client_script>
        <controller_as>c</controller_as>
        <css>div#rest_request_container{
  display:flex;
  flex-wrap: wrap;
  box-shadow: 0px 0px 1px 1px #ddd;
  padding: 2px;
  min-width: 100%;
}
div#rest_header_container{
  display:flex;
  flex: 0 0 100%;
  flex-wrap: wrap;
}
div.header-row, div.endpoint-row{
  display:flex;
  flex: 0 0 100%;
  margin-bottom: 5px;
}
div.header-row &gt; div.header-row-select, div.endpoint-row &gt; div.enpoint-title{
  flex: 0 0 27%;
}
div.header-row &gt; div.header-row-select &gt; select{
  width: 90%;
}
div.header-row &gt; div[data-isheader ='true'], div.endpoint-row &gt; div.endpoint-input{
  flex: 0 0 50%;
}
div.header-row &gt; div[data-isheader ='true'] &gt; input, div.endpoint-row &gt; div.endpoint-input  &gt; input{
  width: 75%;
}
div.header-row &gt; div.remove-header{
  flex: 0 0 3%;
  color: #fff;
  background: #000;
  font-weight: bold;
  text-align: center;
  cursor: pointer;
  margin-left: -90px;

}
div#rest_body_container{
  width: 100%;
}
div#rest_body_container &gt; textarea{
  height: 200px;
  width: 100%;
  border: 1px solid #ddd;
  border-radius: 5px;
}

.tempHidden{
  display: none;
}
input.tempHiddenSize{
  width: 37% !important;
}

//Used by all
input::placeholder{
  color: #ddd;
}

//Used by the Endpoint block
.flex{
  display: flex;
}
.commom-style-1{
  border-color: transparent;
  padding: 10px;
}
.h-lh-40{
  min-height: 40px;
  line-height: 40px;
}
.btn-my-1{
  line-height: 100%;
  background: rgb(248,248,248);
  border-bottom-right-radius: 5px;
  border-top-right-radius: 5px; 
}
//Used by Endpoint &amp; Header
.no-overflow{
  overflow: hidden;
}
.h-100{
  height: 100%;
}

.no-border-color{
  border-color: transparent;
}

//Used by Header Block
.my-flex{
  display: flex;
}
.header-rpt{
  margin-bottom: 5px;
  flex: 0 0 100%;
  flex-wrap: wrap;
  max-width: 100%;
  height: 40px;
  border:1px solid #ddd;
  border-radius: 5px;
  background: rgb(248,248,248);
  padding: 2px;
  overflow-x: scroll;
}
@media only screen and (max-width: 420px) {
  .header-rpt{
    height: 90px;
  }
}
//Authentication
button[disabled]{
  opacity: .5;
  cursor: not-allowed;
}
input:focus {
  border-color: #278efc;
  outline: 0;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(39, 142, 252, 0.6);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(39, 142, 252, 0.6);
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>wgt-ext-restapi-explorer-request</id>
        <internal>false</internal>
        <link/>
        <name>Widget - External Rest API Explorer REQ</name>
        <option_schema>[{"name":"header_choices","default_value":"--Select--","label":"Header Choices","type":"choice","choices":[{"label":"--Select--","value":"--Select--"},{"label":"Accept","value":"Accept"},{"label":"Accept-Charset","value":"Accept-Charset"},{"label":"Accept-Encoding","value":"Accept-Encoding"},{"label":"Accept-Language","value":"Accept-Language"},{"label":"Accept-Datetime","value":"Accept-Datetime"},{"label":"\"Access-Control-Request-Method,","value":"\"Access-Control-Request-Method,"},{"label":"Access-Control-Request-Headers[7]\"","value":"Access-Control-Request-Headers[7]\""},{"label":"Authorization","value":"Authorization"},{"label":"Cache-Control","value":"Cache-Control"},{"label":"Connection","value":"Connection"},{"label":"Cookie","value":"Cookie"},{"label":"Content-Length","value":"Content-Length"},{"label":"Content-MD5","value":"Content-MD5"},{"label":"Content-Type","value":"Content-Type"},{"label":"Date","value":"Date"},{"label":"Expect","value":"Expect"},{"label":"Forwarded","value":"Forwarded"},{"label":"From","value":"From"},{"label":"Host","value":"Host"},{"label":"If-Match","value":"If-Match"},{"label":"If-Modified-Since","value":"If-Modified-Since"},{"label":"If-None-Match","value":"If-None-Match"},{"label":"If-Range","value":"If-Range"},{"label":"If-Unmodified-Since","value":"If-Unmodified-Since"},{"label":"Max-Forwards","value":"Max-Forwards"},{"label":"Origin[7]","value":"Origin[7]"},{"label":"Pragma","value":"Pragma"},{"label":"Proxy-Authorization","value":"Proxy-Authorization"},{"label":"Range","value":"Range"},{"label":"Referer [sic]","value":"Referer [sic]"},{"label":"TE","value":"TE"},{"label":"User-Agent","value":"User-Agent"},{"label":"Upgrade","value":"Upgrade"},{"label":"Via","value":"Via"},{"label":"Warning","value":"Warning"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	data.listOfHeaders=[];
	if(!input){
		var h = new GlideRecord('x_12945_extrestapi_header');
		h.addQuery('active',true);
		h.query();
		while(h.next()){
			var obj_h = {};
			obj_h.value = h.getDisplayValue();
			obj_h.label = h.getDisplayValue();
			obj_h.title = h.hint.getDisplayValue() +" > "+h.example.getDisplayValue();
			data.listOfHeaders.push(obj_h);
		}
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aswinh</sys_created_by>
        <sys_created_on>2017-08-10 04:36:22</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b2832b20db200300e5fc793ebf9619b8</sys_id>
        <sys_mod_count>351</sys_mod_count>
        <sys_name>Widget - External Rest API Explorer REQ</sys_name>
        <sys_package display_value="External Rest API Explorer" source="x_12945_extrestapi">0c03a7a0db200300e5fc793ebf961974</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="External Rest API Explorer">0c03a7a0db200300e5fc793ebf961974</sys_scope>
        <sys_update_name>sp_widget_b2832b20db200300e5fc793ebf9619b8</sys_update_name>
        <sys_updated_by>aswinh</sys_updated_by>
        <sys_updated_on>2017-08-20 08:46:40</sys_updated_on>
        <template><![CDATA[<div id='rest_request_container'>
  <!-- your widget template -->
  <h4>
    Request 
  </h4>
  <span ng-show='httpDuration != 0 '>  Duration :  {{httpDuration}}s </span>


  <!-- Method and Endpoint -->
  <div class='flex h-lh-40' style='flex: 0 0 100%; flex-wrap: wrap; max-width: 100%;'>
    <div style='margin-right: 2px; flex: 1 1 15%'>
      Endpoint  <!-- : {{httpEndpoint}}-->
    </div>
    <div class='flex h-lh-40 no-overflow' style='border:1px solid #ddd; border-radius: 5px; background: linear-gradient(to right, rgb(248,248,248), transparent); flex: 1 1 85%; justify-content: flex-end;'>
      <select class='h-100 commom-style-1 no-border-color' style='flex: 0 0 15%; background-color: transparent;' ng-model='httpMethod'>
        <option value='GET'>GET</option>
        <option value='POST'>POST</option>
        <option value='DELETE'>DELETE</option>
        <option value='PUTCH'>PUTCH</option>
      </select>
      <input class='h-100 commom-style-1' style='flex: 0 1 65%;' ng-model='httpEndpoint'/>
      <button class='h-100 no-border-color btn-my-1' style='flex: 0 0 15%; padding: 0px;' ng-click='start()'>
        Send
      </button>
    </div>
  </div>

  <!-- Header container and logic -->
  <button ng-click='addHeader()' style="margin-bottom: 10px;background: #f8f8f8;border: 1px solid #ddd;border-radius: 5px;margin-top: 5px;width: 200px; margin-right: 5px;">
    Add Header
  </button>
  <button ng-disabled='authHeader.length > 0' ng-click='addAuthentication()' style="margin-bottom: 10px;background: #f8f8f8;border: 1px solid #ddd;border-radius: 5px;margin-top: 5px;width: 200px;  margin-right: 5px;">
    Authentication
  </button>
  <!-- Authorization -->
  <div class='my-flex header-rpt' ng-repeat='auth in authHeader'>
    <div style='flex: 1 1 15%;'>
      <select ng-model='httpAuthType' style='width: 100%;' class='h-100 no-border-color'>
        <option value='Username / Password'>Usr / Pwd</option>
        <option value='Base64 Encoded'>Base64 Encoded</option>
      </select>
    </div>
    <div style='flex: 1 1 60%;' class='my-flex'>
      <input ng-model='auth[0].httpUsername' ng-show="httpAuthType == 'Username / Password' " class='h-100 commom-style-1' style='flex: 0 0 50%;border-right:1px solid #ddd;' placeholder='Username'/>
      <input ng-model='auth[0].httpPassword' ng-show="httpAuthType == 'Username / Password' " class='h-100 commom-style-1' style='flex: 0 0 50%;' placeholder='Password' type='password'/>
      <input ng-model='auth[0].httpBase64' ng-hide="httpAuthType == 'Username / Password' " class='h-100 commom-style-1' style='flex: 0 1 100%;' placeholder='Base64'/>
    </div>
    <div style='flex: 1 1 25%; '>
      <button ng-show='httpAuthType == "Username / Password" ' ng-click='encodeAuthentication(true)' class='h-100 no-border-color' style='border-right: 1px solid  #ddd; width: 50%; background-color: rgb(248, 248, 248);border-bottom-right-radius: 5px;'>
        Encode(b64)
      </button>
      <button ng-show='httpAuthType != "Username / Password" ' ng-click='encodeAuthentication(false)' class='h-100 no-border-color' style='border-right: 1px solid  #ddd; width: 50%; background-color: rgb(248, 248, 248);border-bottom-right-radius: 5px;'>
        Decode(b64)
      </button>
      <button  ng-click='removeAuthentication()' class='h-100 no-border-color' style='width: 30%; background-color: rgb(248, 248, 248);border-bottom-right-radius: 5px;'>
        Remove 
      </button>
    </div>
  </div>
  <div ng-repeat='h in headerConfigList' class='my-flex header-rpt' >
    <div style='flex: 1 1 20%;'>
      <select ng-model='httpFinalHeaders[h.item.id][h.item.select]' style='width: 100%;' class='h-100 no-border-color'>
        <option value='-Select-'>-Select-</option>
        <option ng-repeat='x in data.listOfHeaders | orderBy:"label"' value='{{x.label}}' title='{{x.title}}'>{{x.label}}</option>
      </select>
    </div>
    <div style='flex: 1 1 75%;' class='my-flex'>
      <input ng-model='httpFinalHeaders[h.item.id][h.item.custom]' ng-show="httpFinalHeaders[h.item.id][h.item.select] == '> Custom' " class='h-100 commom-style-1' style='flex: 0 0 50%;border-right:1px solid #ddd;' placeholder='Header'/>
      <input ng-model='httpFinalHeaders[h.item.id][h.item.value]' ng-show="httpFinalHeaders[h.item.id][h.item.select] == '> Custom' " class='h-100 commom-style-1' style='flex: 0 0 50%;' placeholder='Value'/>
      <input ng-model='httpFinalHeaders[h.item.id][h.item.value]' ng-hide="httpFinalHeaders[h.item.id][h.item.select] == '> Custom' " class='h-100 commom-style-1' style='flex: 0 1 100%;' placeholder='Value'/>
    </div>
    <div style='flex: 1 1 5%; '>
      <button class='h-100 no-border-color' style='width: 100%; background-color: rgb(248, 248, 248); font-weight: bold;  border-bottom-right-radius: 5px;' ng-click='removeHeader(h.item.id)'>
        -
      </button>
    </div>
  </div>
  
  <!-- OLD -->
  <div id='rest_body_container' ng-show='httpMethod == "POST"'  style='margin-right: 2px;'>
    Body
    <div>
      <button ng-click='beautify()' ng-show='false'> Beautify JSON </button>
    </div>
    <textarea ng-model='httpBody' style=''></textarea>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
